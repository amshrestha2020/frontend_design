/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/pages/index.tsx":
/*!*****************************!*\
  !*** ./src/pages/index.tsx ***!
  \*****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  auto */  // const countries = [\n //   { name: 'Ninh Binh, Vietnam', flag: '/path/to/vietnam-flag.png', current: true },\n //   { name: 'Mexico City, Mexico', flag: '/path/to/mexico-flag.png', current: false },\n // ];\n // export default function Home() {\n //   const [activeTab] = useState(1);\n //   // const handleTabChange = (event, newValue) => {\n //   //   setActiveTab(newValue);\n //   // };\n //   return (\n //     <Layout>\n //       <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n //         <Typography variant=\"h4\">Mia de Silva</Typography>\n //         <Box>\n //           <TextField placeholder=\"Search\" variant=\"outlined\" size=\"small\" sx={{ marginRight: 2, backgroundColor: '#333' }} />\n //           <Button variant=\"contained\" color=\"primary\">Invite</Button>\n //           <Button variant=\"contained\" color=\"secondary\" sx={{ marginLeft: 2 }}>Upgrade</Button>\n //           <Avatar src=\"/path/to/profile.jpg\" alt=\"Profile\" sx={{ marginLeft: 2 }} />\n //         </Box>\n //       </Box>\n //       <Tabs value={activeTab} textColor=\"inherit\" indicatorColor=\"primary\">\n //         <Tab label=\"General\" />\n //         <Tab label=\"Security\" />\n //         <Tab label=\"Billing\" />\n //         <Tab label=\"Notifications\" />\n //         <Tab label=\"Apps\" />\n //         <Tab label=\"Branding\" />\n //         <Tab label=\"Refer a friend\" />\n //         <Tab label=\"Sharing\" />\n //       </Tabs>\n //       {activeTab === 1 && (\n //         <Box mt={3}>\n //           <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\n //             <Box display=\"flex\" alignItems=\"center\">\n //               <CircularProgress variant=\"determinate\" value={90} size={40} sx={{ marginRight: 2 }} />\n //               <Typography>Your account security is 90%. Please review your account security settings regularly and update your password.</Typography>\n //             </Box>\n //             <Box>\n //               <Button variant=\"outlined\" color=\"primary\" sx={{ marginRight: 2 }}>Dismiss</Button>\n //               <Button variant=\"contained\" color=\"primary\">Review security</Button>\n //             </Box>\n //           </Box>\n //           <Typography variant=\"h6\">Basics</Typography>\n //           <List>\n //             <ListItem>\n //               <ListItemText primary=\"Password\" secondary=\"Set a password to protect your account.\" />\n //               <Button variant=\"outlined\" color=\"primary\">Edit</Button>\n //             </ListItem>\n //             <ListItem>\n //               <ListItemText primary=\"Two-step verification\" secondary=\"We recommend requiring a verification code in addition to your password.\" />\n //               <Switch defaultChecked />\n //               <Button variant=\"outlined\" color=\"primary\">Edit</Button>\n //             </ListItem>\n //           </List>\n //           <Typography variant=\"h6\" mt={3}>Browsers and devices</Typography>\n //           <List>\n //             {countries.map((country, index) => (\n //               <ListItem key={index}>\n //                 <img src={country.flag} alt={country.name} width={30} style={{ marginRight: 10 }} />\n //                 <ListItemText primary={`Brave on Mac OS X`} secondary={country.name} />\n //                 <Typography>{country.current ? 'Current session' : '1 month ago'}</Typography>\n //               </ListItem>\n //             ))}\n //           </List>\n //         </Box>\n //       )}\n //     </Layout>\n //   );\n // }\n // import Security from '../components/security/Security'; // Adjust path as per your project structure\n // const index = () => {\n //   return (\n //     <Layout>\n //       <Security />\n //     </Layout>\n //   );\n // };\n // export default index;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaW5kZXgudHN4IiwibWFwcGluZ3MiOiJzREFBQSxDQU1BLHNCQUFzQjtDQUN0QixzRkFBc0Y7Q0FDdEYsdUZBQXVGO0NBQ3ZGLEtBQUs7Q0FFTCxtQ0FBbUM7Q0FDbkMscUNBQXFDO0NBRXJDLHNEQUFzRDtDQUN0RCxpQ0FBaUM7Q0FDakMsVUFBVTtDQUVWLGFBQWE7Q0FDYixlQUFlO0NBQ2YsdUZBQXVGO0NBQ3ZGLDZEQUE2RDtDQUM3RCxnQkFBZ0I7Q0FDaEIsZ0lBQWdJO0NBQ2hJLHdFQUF3RTtDQUN4RSxrR0FBa0c7Q0FDbEcsdUZBQXVGO0NBQ3ZGLGlCQUFpQjtDQUNqQixlQUFlO0NBQ2YsOEVBQThFO0NBQzlFLGtDQUFrQztDQUNsQyxtQ0FBbUM7Q0FDbkMsa0NBQWtDO0NBQ2xDLHdDQUF3QztDQUN4QywrQkFBK0I7Q0FDL0IsbUNBQW1DO0NBQ25DLHlDQUF5QztDQUN6QyxrQ0FBa0M7Q0FDbEMsZ0JBQWdCO0NBQ2hCLDhCQUE4QjtDQUM5Qix1QkFBdUI7Q0FDdkIsMkZBQTJGO0NBQzNGLHVEQUF1RDtDQUN2RCx3R0FBd0c7Q0FDeEcsd0pBQXdKO0NBQ3hKLHFCQUFxQjtDQUNyQixvQkFBb0I7Q0FDcEIsb0dBQW9HO0NBQ3BHLHFGQUFxRjtDQUNyRixxQkFBcUI7Q0FDckIsbUJBQW1CO0NBQ25CLHlEQUF5RDtDQUN6RCxtQkFBbUI7Q0FDbkIseUJBQXlCO0NBQ3pCLHdHQUF3RztDQUN4Ryx5RUFBeUU7Q0FDekUsMEJBQTBCO0NBQzFCLHlCQUF5QjtDQUN6QixzSkFBc0o7Q0FDdEosMENBQTBDO0NBQzFDLHlFQUF5RTtDQUN6RSwwQkFBMEI7Q0FDMUIsb0JBQW9CO0NBQ3BCLDhFQUE4RTtDQUM5RSxtQkFBbUI7Q0FDbkIsbURBQW1EO0NBQ25ELHVDQUF1QztDQUN2Qyx1R0FBdUc7Q0FDdkcsMEZBQTBGO0NBQzFGLGlHQUFpRztDQUNqRyw0QkFBNEI7Q0FDNUIsa0JBQWtCO0NBQ2xCLG9CQUFvQjtDQUNwQixpQkFBaUI7Q0FDakIsV0FBVztDQUNYLGdCQUFnQjtDQUNoQixPQUFPO0NBQ1AsSUFBSTtDQUtKLHVHQUF1RztDQUV2Ryx3QkFBd0I7Q0FDeEIsYUFBYTtDQUNiLGVBQWU7Q0FDZixxQkFBcUI7Q0FDckIsZ0JBQWdCO0NBQ2hCLE9BQU87Q0FDUCxLQUFLO0NBRUwsd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9wYWdlcy9pbmRleC50c3g/MTlhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBCb3gsIFRhYnMsIFRhYiwgVHlwb2dyYXBoeSwgQXZhdGFyLCBCdXR0b24sIFRleHRGaWVsZCwgU3dpdGNoLCBMaXN0LCBMaXN0SXRlbSwgTGlzdEl0ZW1UZXh0LCBDaXJjdWxhclByb2dyZXNzIH0gZnJvbSAnQG11aS9tYXRlcmlhbCc7XG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uL3BhZ2VzL0xheW91dCc7XG5cbi8vIGNvbnN0IGNvdW50cmllcyA9IFtcbi8vICAgeyBuYW1lOiAnTmluaCBCaW5oLCBWaWV0bmFtJywgZmxhZzogJy9wYXRoL3RvL3ZpZXRuYW0tZmxhZy5wbmcnLCBjdXJyZW50OiB0cnVlIH0sXG4vLyAgIHsgbmFtZTogJ01leGljbyBDaXR5LCBNZXhpY28nLCBmbGFnOiAnL3BhdGgvdG8vbWV4aWNvLWZsYWcucG5nJywgY3VycmVudDogZmFsc2UgfSxcbi8vIF07XG5cbi8vIGV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhvbWUoKSB7XG4vLyAgIGNvbnN0IFthY3RpdmVUYWJdID0gdXNlU3RhdGUoMSk7XG5cbi8vICAgLy8gY29uc3QgaGFuZGxlVGFiQ2hhbmdlID0gKGV2ZW50LCBuZXdWYWx1ZSkgPT4ge1xuLy8gICAvLyAgIHNldEFjdGl2ZVRhYihuZXdWYWx1ZSk7XG4vLyAgIC8vIH07XG5cbi8vICAgcmV0dXJuIChcbi8vICAgICA8TGF5b3V0PlxuLy8gICAgICAgPEJveCBkaXNwbGF5PVwiZmxleFwiIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIiBtYj17Mn0+XG4vLyAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJoNFwiPk1pYSBkZSBTaWx2YTwvVHlwb2dyYXBoeT5cbi8vICAgICAgICAgPEJveD5cbi8vICAgICAgICAgICA8VGV4dEZpZWxkIHBsYWNlaG9sZGVyPVwiU2VhcmNoXCIgdmFyaWFudD1cIm91dGxpbmVkXCIgc2l6ZT1cInNtYWxsXCIgc3g9e3sgbWFyZ2luUmlnaHQ6IDIsIGJhY2tncm91bmRDb2xvcjogJyMzMzMnIH19IC8+XG4vLyAgICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwiY29udGFpbmVkXCIgY29sb3I9XCJwcmltYXJ5XCI+SW52aXRlPC9CdXR0b24+XG4vLyAgICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwiY29udGFpbmVkXCIgY29sb3I9XCJzZWNvbmRhcnlcIiBzeD17eyBtYXJnaW5MZWZ0OiAyIH19PlVwZ3JhZGU8L0J1dHRvbj5cbi8vICAgICAgICAgICA8QXZhdGFyIHNyYz1cIi9wYXRoL3RvL3Byb2ZpbGUuanBnXCIgYWx0PVwiUHJvZmlsZVwiIHN4PXt7IG1hcmdpbkxlZnQ6IDIgfX0gLz5cbi8vICAgICAgICAgPC9Cb3g+XG4vLyAgICAgICA8L0JveD5cbi8vICAgICAgIDxUYWJzIHZhbHVlPXthY3RpdmVUYWJ9IHRleHRDb2xvcj1cImluaGVyaXRcIiBpbmRpY2F0b3JDb2xvcj1cInByaW1hcnlcIj5cbi8vICAgICAgICAgPFRhYiBsYWJlbD1cIkdlbmVyYWxcIiAvPlxuLy8gICAgICAgICA8VGFiIGxhYmVsPVwiU2VjdXJpdHlcIiAvPlxuLy8gICAgICAgICA8VGFiIGxhYmVsPVwiQmlsbGluZ1wiIC8+XG4vLyAgICAgICAgIDxUYWIgbGFiZWw9XCJOb3RpZmljYXRpb25zXCIgLz5cbi8vICAgICAgICAgPFRhYiBsYWJlbD1cIkFwcHNcIiAvPlxuLy8gICAgICAgICA8VGFiIGxhYmVsPVwiQnJhbmRpbmdcIiAvPlxuLy8gICAgICAgICA8VGFiIGxhYmVsPVwiUmVmZXIgYSBmcmllbmRcIiAvPlxuLy8gICAgICAgICA8VGFiIGxhYmVsPVwiU2hhcmluZ1wiIC8+XG4vLyAgICAgICA8L1RhYnM+XG4vLyAgICAgICB7YWN0aXZlVGFiID09PSAxICYmIChcbi8vICAgICAgICAgPEJveCBtdD17M30+XG4vLyAgICAgICAgICAgPEJveCBkaXNwbGF5PVwiZmxleFwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIiBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIiBtYj17M30+XG4vLyAgICAgICAgICAgICA8Qm94IGRpc3BsYXk9XCJmbGV4XCIgYWxpZ25JdGVtcz1cImNlbnRlclwiPlxuLy8gICAgICAgICAgICAgICA8Q2lyY3VsYXJQcm9ncmVzcyB2YXJpYW50PVwiZGV0ZXJtaW5hdGVcIiB2YWx1ZT17OTB9IHNpemU9ezQwfSBzeD17eyBtYXJnaW5SaWdodDogMiB9fSAvPlxuLy8gICAgICAgICAgICAgICA8VHlwb2dyYXBoeT5Zb3VyIGFjY291bnQgc2VjdXJpdHkgaXMgOTAlLiBQbGVhc2UgcmV2aWV3IHlvdXIgYWNjb3VudCBzZWN1cml0eSBzZXR0aW5ncyByZWd1bGFybHkgYW5kIHVwZGF0ZSB5b3VyIHBhc3N3b3JkLjwvVHlwb2dyYXBoeT5cbi8vICAgICAgICAgICAgIDwvQm94PlxuLy8gICAgICAgICAgICAgPEJveD5cbi8vICAgICAgICAgICAgICAgPEJ1dHRvbiB2YXJpYW50PVwib3V0bGluZWRcIiBjb2xvcj1cInByaW1hcnlcIiBzeD17eyBtYXJnaW5SaWdodDogMiB9fT5EaXNtaXNzPC9CdXR0b24+XG4vLyAgICAgICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cImNvbnRhaW5lZFwiIGNvbG9yPVwicHJpbWFyeVwiPlJldmlldyBzZWN1cml0eTwvQnV0dG9uPlxuLy8gICAgICAgICAgICAgPC9Cb3g+XG4vLyAgICAgICAgICAgPC9Cb3g+XG4vLyAgICAgICAgICAgPFR5cG9ncmFwaHkgdmFyaWFudD1cImg2XCI+QmFzaWNzPC9UeXBvZ3JhcGh5PlxuLy8gICAgICAgICAgIDxMaXN0PlxuLy8gICAgICAgICAgICAgPExpc3RJdGVtPlxuLy8gICAgICAgICAgICAgICA8TGlzdEl0ZW1UZXh0IHByaW1hcnk9XCJQYXNzd29yZFwiIHNlY29uZGFyeT1cIlNldCBhIHBhc3N3b3JkIHRvIHByb3RlY3QgeW91ciBhY2NvdW50LlwiIC8+XG4vLyAgICAgICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cIm91dGxpbmVkXCIgY29sb3I9XCJwcmltYXJ5XCI+RWRpdDwvQnV0dG9uPlxuLy8gICAgICAgICAgICAgPC9MaXN0SXRlbT5cbi8vICAgICAgICAgICAgIDxMaXN0SXRlbT5cbi8vICAgICAgICAgICAgICAgPExpc3RJdGVtVGV4dCBwcmltYXJ5PVwiVHdvLXN0ZXAgdmVyaWZpY2F0aW9uXCIgc2Vjb25kYXJ5PVwiV2UgcmVjb21tZW5kIHJlcXVpcmluZyBhIHZlcmlmaWNhdGlvbiBjb2RlIGluIGFkZGl0aW9uIHRvIHlvdXIgcGFzc3dvcmQuXCIgLz5cbi8vICAgICAgICAgICAgICAgPFN3aXRjaCBkZWZhdWx0Q2hlY2tlZCAvPlxuLy8gICAgICAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJvdXRsaW5lZFwiIGNvbG9yPVwicHJpbWFyeVwiPkVkaXQ8L0J1dHRvbj5cbi8vICAgICAgICAgICAgIDwvTGlzdEl0ZW0+XG4vLyAgICAgICAgICAgPC9MaXN0PlxuLy8gICAgICAgICAgIDxUeXBvZ3JhcGh5IHZhcmlhbnQ9XCJoNlwiIG10PXszfT5Ccm93c2VycyBhbmQgZGV2aWNlczwvVHlwb2dyYXBoeT5cbi8vICAgICAgICAgICA8TGlzdD5cbi8vICAgICAgICAgICAgIHtjb3VudHJpZXMubWFwKChjb3VudHJ5LCBpbmRleCkgPT4gKFxuLy8gICAgICAgICAgICAgICA8TGlzdEl0ZW0ga2V5PXtpbmRleH0+XG4vLyAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2NvdW50cnkuZmxhZ30gYWx0PXtjb3VudHJ5Lm5hbWV9IHdpZHRoPXszMH0gc3R5bGU9e3sgbWFyZ2luUmlnaHQ6IDEwIH19IC8+XG4vLyAgICAgICAgICAgICAgICAgPExpc3RJdGVtVGV4dCBwcmltYXJ5PXtgQnJhdmUgb24gTWFjIE9TIFhgfSBzZWNvbmRhcnk9e2NvdW50cnkubmFtZX0gLz5cbi8vICAgICAgICAgICAgICAgICA8VHlwb2dyYXBoeT57Y291bnRyeS5jdXJyZW50ID8gJ0N1cnJlbnQgc2Vzc2lvbicgOiAnMSBtb250aCBhZ28nfTwvVHlwb2dyYXBoeT5cbi8vICAgICAgICAgICAgICAgPC9MaXN0SXRlbT5cbi8vICAgICAgICAgICAgICkpfVxuLy8gICAgICAgICAgIDwvTGlzdD5cbi8vICAgICAgICAgPC9Cb3g+XG4vLyAgICAgICApfVxuLy8gICAgIDwvTGF5b3V0PlxuLy8gICApO1xuLy8gfVxuXG5cblxuXG4vLyBpbXBvcnQgU2VjdXJpdHkgZnJvbSAnLi4vY29tcG9uZW50cy9zZWN1cml0eS9TZWN1cml0eSc7IC8vIEFkanVzdCBwYXRoIGFzIHBlciB5b3VyIHByb2plY3Qgc3RydWN0dXJlXG5cbi8vIGNvbnN0IGluZGV4ID0gKCkgPT4ge1xuLy8gICByZXR1cm4gKFxuLy8gICAgIDxMYXlvdXQ+XG4vLyAgICAgICA8U2VjdXJpdHkgLz5cbi8vICAgICA8L0xheW91dD5cbi8vICAgKTtcbi8vIH07XG5cbi8vIGV4cG9ydCBkZWZhdWx0IGluZGV4OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/index.tsx\n"));

/***/ })

});